import type {
	EnkoreTargetIntegrationAPI,
	EnkoreLockFile
} from "#~src/export/__star_export.mts"
import type {
	Toolchains,
	ValidToolchainCombinations
} from "@enkore-types/toolchains"

export type Definition = {
	setDebugMode: (mode: boolean) => boolean
	getDebugMode: () => boolean

	createTemporaryFile: (
		projectRoot: string, fileExtension?: string
	) => Promise<string>

	createTemporaryDirectory: (
		projectRoot: string
	) => Promise<string>

	//
	// - loads the target integration api
	// - installs the target dependencies
	// - manages the lockfile
	//
	initializeProject: (
		projectRoot: string | ["inferFromCLIArgs"],
		isCIEnvironment: boolean,
		options?: {
			npmBinaryPath?: string
			force?: boolean
			forceToolchain?: ValidToolchainCombinations|false
		}
	) => Promise<{
		readonly initialLockFile: EnkoreLockFile

		targetIntegrationAPI: EnkoreTargetIntegrationAPI

		updateLockfileAutogeneratedFiles: (
			files: {
				[path: string]: {
					hash: string
				}
			}
		) => Promise<undefined>
	}>

	loadToolchain: (
		projectRoot: string | ["inferFromCLIArgs"]
	) => Promise<Toolchains>

	findProjectRootFromDirectory: (
		startDirectory: string
	) => Promise<string|false>
}
